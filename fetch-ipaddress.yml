---

---

- name: Deploy the VMs
  hosts: localhost
  vars:
       random_name:
         - aspire1
         - aspire2
         - aspire3
         - aspire4
         - aspire5
         - aspire6
         - aspire7
         - aspire8
         - aspire9
         - aspire10
         - aspire11
         - aspire12
         - aspire13
         - aspire14
         - aspire15
         - aspire16
         - aspire17
         - aspire18
         - aspire19
         - aspire20
         - aspire21
         - aspire22
  connection: local
  gather_facts: no
  tasks:
  - name: set vmname
    set_fact:
      vmname: "{{ random_name | random }}"
      
  - name: Create a VM
    vmware_guest:
      name: "{{ vmname }}"
      hostname: "192.168.5.226"
      validate_certs: False
      username: "administrator@vsphere.delta"
      password: "Passw0rd!"
      datacenter: "Delta"
      datastore: "datastore2"
      folder: "/Demo"
      state: poweredon
      template: demo-aspire
         
      networks:
      - name: "1050"
      - name: "1060"
   
## Variables to connect to vCenter, Template and location of the new VM
  vars:
    vcenter: IP_or_FQDN_of_vCenter
    user: vCenter_user
    passwd: vCenter_user_password
    template: template_name
    rpool: "/Resources" ## <- Default when no Resource Pool is specified
    cluster: "my_cluster" ## I don't specify ESXi in the Playbook because the Cluster has DRS

## Task that creates the virtual machine from the Template. Go!
  tasks:
    -vsphere_guest:
        vcenter_hostname: "{{ vcenter }}"
        username: "{{ user }}"
        password: "{{ passwd }}"
        guest: "{{ guest }}"
        from_template: "yes"
        template_src: "{{ template }}"
        resource_pool: "{{ rpool }}"
        cluster: "{{ cluster }}"
    - pause: seconds=60 ## Pause to wait for the VM to power on and vCenter to capture the IP

## The following lines collect "facts" of the VM and allow to take the IP that it took by DHCP
    -vsphere_guest:
        vcenter_hostname: "{{ vcenter }}"
        username: "{{ user }}"
        password: "{{ passwd }}"
        guest: "{{ guest }}"
        vmware_guest_facts: yes

## Debug to validate that the Playbook has the IP of the VM
    - debug: msg="IP is {{ hw_eth0.ipaddresses[0] }}"

## Add the IP to the hosts inventory to customize it
    - add_host: name={{ hw_eth0.ipaddresses[0] }} groups=virtual

-
  host:virtual

## Debug to validate that we have the name of the VM to change the hostname (Review Fact Caching)
  tasks:
    - debug: msg="{{ hostvars['localhost']['hw_name'] }}"

## Chores. Install Apache, start it and change the hostname of the virtual machine.
  tasks:
    - name: install apache2
      apt: name=apache2 update_cache=yes state=latest
    - name: start apache
      service: name=apache2 state=started
    - name: rename host
      hostname: name="{{ hostvars['localhost']['hw_name'] }}"

-
  hosts:localhost

## Now just for showoff we send a notification to Slack
  tasks:
    - name: Notification to Slack
      local_action:
        module:slack
        token: admfÃ±fxfm---API-key-to-receive-notifications---akjnelner
        msg: "Server {{ hostvars['localhost']['hw_name'] }} ready! IP: {{ hw_eth0.ipaddresses[0] }}"
